{"ast":null,"code":"var _jsxFileName = \"/Users/yuchenxu/Desktop/PPM/ppmtoolReact/src/Components/Project/AddProject.js\";\nimport React, { Component } from 'react';\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { createProject } from \"../../actions/projectAction\";\nimport classnames from \"classnames\";\n\nclass AddProject extends Component {\n  constructor() {\n    super();\n    this.state = {\n      projectName: \"\",\n      projectIdentifier: \"\",\n      description: \"\",\n      start_date: \"\",\n      end_date: \"\",\n      errors: {}\n    };\n    this.onChange = this.onChange.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.errors) {\n      this.setState({\n        errors: nextProps.errors\n      });\n    }\n  }\n\n  onChange(e) {\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n  }\n\n  onSubmit(e) {\n    e.preventDefault();\n    const newProject = {\n      projectName: this.state.projectName,\n      projectIdentifier: this.state.projectIdentifier,\n      description: this.state.description,\n      start_date: this.state.start_date,\n      end_date: this.state.end_date\n    };\n    this.props.createProject(newProject, this.props.history);\n  }\n\n  render() {\n    const {\n      errors\n    } = this.state;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"register\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-md-8 m-auto\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, React.createElement(\"h5\", {\n      className: \"display-4 text-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, \"Create / Edit Project form\"), React.createElement(\"hr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }), React.createElement(\"form\", {\n      onSubmit: this.onSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      className: classnames(\"form-control form-control-lg \", {\n        \"is-invalid\": errors.projectName\n      }),\n      placeholder: \"Project Name\",\n      name: \"projectName\",\n      value: this.state.projectName,\n      onChange: this.onChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }), errors.projectName && React.createElement(\"div\", {\n      className: \"invalid-feedback\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, errors.projectName)), React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      className: classnames(\"form-control form-control-lg \", {\n        \"is-invalid\": errors.projectName\n      }),\n      placeholder: \"Unique Project ID\",\n      name: \"projectIdentifier\",\n      value: this.state.projectIdentifier,\n      onChange: this.onChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, errors.projectIdentifier)), React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, React.createElement(\"textarea\", {\n      className: \"form-control form-control-lg\",\n      placeholder: \"Project Description\",\n      name: \"description\",\n      value: this.state.description,\n      onChange: this.onChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, errors.description)), React.createElement(\"h6\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, \"Start Date\"), React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"date\",\n      className: \"form-control form-control-lg\",\n      name: \"start_date\",\n      value: this.state.start_date,\n      onChange: this.onChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    })), React.createElement(\"h6\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }, \"Estimated End Date\"), React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"date\",\n      className: \"form-control form-control-lg\",\n      name: \"end_date\",\n      value: this.state.end_date,\n      onChange: this.onChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    })), React.createElement(\"input\", {\n      type: \"submit\",\n      className: \"btn btn-primary btn-block mt-4\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    })))))));\n  }\n\n}\n\nAddProject.propTypes = {\n  createProject: PropTypes.func.isRequired,\n  errors: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  errors: state.errors\n});\n\nexport default connect(mapStateToProps, {\n  createProject\n})(AddProject);","map":{"version":3,"sources":["/Users/yuchenxu/Desktop/PPM/ppmtoolReact/src/Components/Project/AddProject.js"],"names":["React","Component","PropTypes","connect","createProject","classnames","AddProject","constructor","state","projectName","projectIdentifier","description","start_date","end_date","errors","onChange","bind","onSubmit","componentWillReceiveProps","nextProps","setState","e","target","name","value","preventDefault","newProject","props","history","render","propTypes","func","isRequired","object","mapStateToProps"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { createProject } from \"../../actions/projectAction\";\nimport classnames from \"classnames\";\n\nclass AddProject extends Component {\n    constructor(){\n        super();\n        this.state={\n            projectName: \"\",\n            projectIdentifier: \"\",\n            description: \"\",\n            start_date: \"\",\n            end_date: \"\",\n            errors: {}\n        };\n\n        this.onChange = this.onChange.bind(this);\n        this.onSubmit = this.onSubmit.bind(this);\n    }\n\n    componentWillReceiveProps(nextProps){\n        if(nextProps.errors){\n            this.setState({errors: nextProps.errors});\n        }\n    }\n\n    onChange(e) {\n        this.setState({ [e.target.name]: e.target.value });\n    }\n\n    onSubmit(e) {\n        e.preventDefault();\n        const newProject = {\n          projectName: this.state.projectName,\n          projectIdentifier: this.state.projectIdentifier,\n          description: this.state.description,\n          start_date: this.state.start_date,\n          end_date: this.state.end_date\n        };\n\n        this.props.createProject(newProject, this.props.history)\n    }\n\n\n    render() {\n        const {errors} = this.state\n        return (\n            <div>\n                \n                <div className=\"register\">\n                    <div className=\"container\">\n                        <div className=\"row\">\n                            <div className=\"col-md-8 m-auto\">\n                                <h5 className=\"display-4 text-center\">Create / Edit Project form</h5>\n                                <hr />\n                                <form onSubmit={this.onSubmit}>\n                                    <div className=\"form-group\">\n                                        <input type=\"text\" \n                                        className={classnames(\"form-control form-control-lg \", {\n                                            \"is-invalid\": errors.projectName\n                                        } )}\n                                        placeholder=\"Project Name\" \n                                        name=\"projectName\"\n                                        value={this.state.projectName}\n                                        onChange={this.onChange}\n                                        />\n                                         {errors.projectName && (\n                                             <div className=\"invalid-feedback\">{errors.projectName}</div>\n                                         )}\n                                    </div>\n                                    <div className=\"form-group\">\n                                        <input type=\"text\" \n                                        className={classnames(\"form-control form-control-lg \", {\n                                            \"is-invalid\": errors.projectName\n                                        } )}\n                                        placeholder=\"Unique Project ID\"\n                                        name=\"projectIdentifier\"\n                                        value={this.state.projectIdentifier}\n                                        onChange={this.onChange}\n                                            />\n                                        <p>{errors.projectIdentifier}</p>\n                                    </div>\n                                \n                                    <div className=\"form-group\">\n                                        <textarea className=\"form-control form-control-lg\" \n                                        placeholder=\"Project Description\"\n                                        name=\"description\"\n                                        value={this.state.description}\n                                        onChange={this.onChange}\n                                        ></textarea>\n                                        <p>{errors.description}</p>\n                                    </div>\n                                    <h6>Start Date</h6>\n                                    <div className=\"form-group\">\n                                        <input type=\"date\" \n                                        className=\"form-control form-control-lg\" \n                                        name=\"start_date\"\n                                        value={this.state.start_date}\n                                        onChange={this.onChange}\n                                         />\n                                    </div>\n                                    <h6>Estimated End Date</h6>\n                                    <div className=\"form-group\">\n                                        <input type=\"date\" \n                                        className=\"form-control form-control-lg\" \n                                        name=\"end_date\"\n                                        value={this.state.end_date}\n                                        onChange={this.onChange}\n                                         />\n                                    </div>\n\n                                    <input type=\"submit\" className=\"btn btn-primary btn-block mt-4\" />\n                                </form>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nAddProject.propTypes = {\n    createProject: PropTypes.func.isRequired,\n    errors: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n    errors:state.errors\n});\n\nexport default connect(mapStateToProps,\n    {createProject}) (AddProject);\n\n"]},"metadata":{},"sourceType":"module"}