{"ast":null,"code":"var _jsxFileName = \"/Users/yuchenxu/Desktop/ProjectManamentTool/ppmtoolReact+Redux copy/src/Components/Dashboard.js\";\nimport React, { Component } from 'react';\nimport Item from './Project/Item';\nimport CreateProjectBouttom from './Project/CreateProjectButtom';\nimport { connect } from \"react-redux\";\nimport { getProjects } from \"../actions/projectAction\";\nimport PropTypes from \"prop-types\";\n\nclass Dashboard extends Component {\n  componentDidMount() {\n    this.props.getProjects();\n  }\n\n  render() {\n    const {\n      projects\n    } = this.props.project;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18\n      },\n      __self: this\n    }, \"This is a Component.\"), React.createElement(CreateProjectBouttom, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20\n      },\n      __self: this\n    }), React.createElement(\"hr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21\n      },\n      __self: this\n    }), projects.map(project => React.createElement(ProjectItem, {\n      key: project.id,\n      project: project,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23\n      },\n      __self: this\n    })));\n  }\n\n}\n\nDashboard.propTypes = {\n  project: PropTypes.object.isRequired,\n  getProjects: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = state => ({\n  project: state.project\n});\n\nexport default connect(mapStateToProps, {\n  getProjects\n})(Dashboard);","map":{"version":3,"sources":["/Users/yuchenxu/Desktop/ProjectManamentTool/ppmtoolReact+Redux copy/src/Components/Dashboard.js"],"names":["React","Component","Item","CreateProjectBouttom","connect","getProjects","PropTypes","Dashboard","componentDidMount","props","render","projects","project","map","id","propTypes","object","isRequired","func","mapStateToProps","state"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,IAAP,MAAiB,gBAAjB;AACA,OAAOC,oBAAP,MAAiC,+BAAjC;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAASC,WAAT,QAA4B,0BAA5B;AACA,OAAOC,SAAP,MAAsB,YAAtB;;AACA,MAAMC,SAAN,SAAwBN,SAAxB,CAAkC;AAE9BO,EAAAA,iBAAiB,GAAI;AACjB,SAAKC,KAAL,CAAWJ,WAAX;AACH;;AAGDK,EAAAA,MAAM,GAAG;AACL,UAAM;AAAEC,MAAAA;AAAF,QAAe,KAAKF,KAAL,CAAWG,OAAhC;AACA,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BADJ,EAEI,oBAAC,oBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHF,EAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJF,EAKGD,QAAQ,CAACE,GAAT,CAAaD,OAAO,IACnB,oBAAC,WAAD;AAAa,MAAA,GAAG,EAAEA,OAAO,CAACE,EAA1B;AAA8B,MAAA,OAAO,EAAEF,OAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADD,CALH,CADJ;AAWH;;AApB6B;;AAsBlCL,SAAS,CAACQ,SAAV,GAAsB;AAClBH,EAAAA,OAAO,EAAEN,SAAS,CAACU,MAAV,CAAiBC,UADR;AAElBZ,EAAAA,WAAW,EAAEC,SAAS,CAACY,IAAV,CAAeD;AAFV,CAAtB;;AAKA,MAAME,eAAe,GAAGC,KAAK,KAAK;AAC9BR,EAAAA,OAAO,EAAEQ,KAAK,CAACR;AADe,CAAL,CAA7B;;AAKA,eAAeR,OAAO,CAACe,eAAD,EAAkB;AAACd,EAAAA;AAAD,CAAlB,CAAP,CAAwCE,SAAxC,CAAf","sourcesContent":["import React, { Component } from 'react'\nimport Item from './Project/Item';\nimport CreateProjectBouttom from './Project/CreateProjectButtom';\nimport {connect} from \"react-redux\"\nimport { getProjects } from \"../actions/projectAction\"\nimport PropTypes from \"prop-types\";\nclass Dashboard extends Component {\n\n    componentDidMount () {\n        this.props.getProjects();\n    }\n\n\n    render() {\n        const { projects } = this.props.project;\n        return (\n            <div>\n                <h1>This is a Component.</h1>\n                <CreateProjectBouttom />\n              <br />\n              <hr />\n              {projects.map(project => (\n                <ProjectItem key={project.id} project={project} />\n              ))}\n            </div>\n        )\n    }\n}\nDashboard.propTypes = {\n    project: PropTypes.object.isRequired,\n    getProjects: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = state => ({\n    project: state.project\n\n});\n\nexport default connect(mapStateToProps, {getProjects})(Dashboard);\n"]},"metadata":{},"sourceType":"module"}